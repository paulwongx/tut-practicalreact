{"version":3,"sources":["components/ReactIcons.js","components/ReactToastify.js","components/ReactModal.js","components/Tooltip.js","components/Countup.js","components/IdleTimerContainer.js","components/ColorPicker.js","components/CreditCard.js","components/DatePickerContainer.js","App.js","serviceWorker.js","index.js"],"names":["ReactIcons","color","size","CustomToast","closeToast","onClick","toast","configure","ReactToastify","className","position","POSITION","TOP_LEFT","success","TOP_CENTER","autoClose","info","TOP_RIGHT","warn","BOTTOM_LEFT","error","BOTTOM_CENTER","BOTTOM_RIGHT","Modal","setAppElement","ReactModal","useState","modalIsOpen","setModalIsOpen","isOpen","shouldCloseOnOverlayClick","onRequestClose","style","overlay","backgroundColor","content","ColoredTooltip","CustomChild","forwardRef","props","ref","Tooltip","paddingBottom","placement","arrow","delay","Countup","useCountUp","duration","end","startOnMount","countUp","start","pauseResume","reset","update","prefix","decimals","suffix","IdleTimerContainer","isLoggedIn","setIsLoggedIn","idleTimerRef","useRef","sessionTimeoutRef","logOut","clearTimeout","current","console","log","timeout","onIdle","setTimeout","ColorPicker","setColor","showColorPicker","setShowColorPicker","onChange","updatedColor","hex","CreditCard","number","setNumber","name","setName","expiry","setExpiry","cvc","setCvc","focus","setFocus","focused","type","placeholder","value","e","target","onFocus","DatePickerContainer","selectedDate","setSelectedDate","selected","date","dateFormat","minDate","Date","filterDate","getDay","isClearable","showYearDropdown","scrollableMonthYearDropdown","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2544646c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { MdAlarm } from \"react-icons/md\";\r\n\r\nfunction ReactIcons() {\r\n  return (\r\n    <div >\r\n      <h1>Font Awesome Icons</h1>\r\n        <FaReact />\r\n        <MdAlarm color='purple' size='2rem' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactIcons;\r\n","import React from 'react';\r\n\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst CustomToast = ({ closeToast }) => {\r\n  return (\r\n    <div>\r\n      Something went wrong!\r\n      <button onClick={closeToast}>Close</button>\r\n    </div>\r\n  )\r\n}\r\n\r\ntoast.configure()\r\nfunction ReactToastify() {\r\n\r\n  const notify = () => {\r\n    toast('Basic notification!', {position: toast.POSITION.TOP_LEFT}) // default lasts 5 seconds\r\n    toast.success('Success notification!', {position: toast.POSITION.TOP_CENTER, autoClose: 8000}) // lasts 8 seconds\r\n    toast.info('Info notification!', {position: toast.POSITION.TOP_RIGHT, autoClose: false}) // never closes\r\n    toast.warn('Warning notification!', {position: toast.POSITION.BOTTOM_LEFT})\r\n    toast.error('Error notification!', {position: toast.POSITION.BOTTOM_CENTER})\r\n    toast(<CustomToast />, {position: toast.POSITION.BOTTOM_RIGHT})\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Toast Notifications</h1>\r\n      <button onClick={notify}>Notify!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactToastify;\r\n","import React, {useState} from 'react';\r\nimport Modal from 'react-modal'\r\n\r\nModal.setAppElement('#root') // removes accessibility error on click\r\nfunction ReactModal() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h1>React Modals</h1>\r\n      <button onClick={() => setModalIsOpen(true)}>Open modal</button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={\r\n          {\r\n            overlay: {\r\n              backgroundColor: 'grey'\r\n            },\r\n            content: {\r\n              color: 'orange'\r\n            }\r\n          }\r\n        }\r\n        >\r\n          <h2>Modal title</h2>\r\n          <p>Modal Body</p>\r\n          <button onClick={()=> setModalIsOpen(false)}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactModal;\r\n","import React, {forwardRef} from 'react'\r\nimport Tippy from '@tippy.js/react'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nconst ColoredTooltip = () => {\r\n  return <span style={{color: 'yellow'}}>Colored component</span>\r\n}\r\n\r\nconst CustomChild = forwardRef((props, ref) => {\r\n  return (\r\n    <div ref={ref}>\r\n      <div>First line</div>\r\n      <div>Second line</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nfunction Tooltip() {\r\n  return (\r\n    <div>\r\n      <h1>ToolTip</h1>\r\n\r\n      <div style={{paddingBottom: '20px'}}>\r\n        <p>No arrow; 1 sec delay; right placement</p>\r\n        {/* Appears and disappears after 1 second */}\r\n        <Tippy placement='right' arrow={false} delay={1000} content='Basic Tooltip'>\r\n        <button>Hover</button>\r\n        </Tippy>\r\n      </div>\r\n\r\n      <div style={{paddingBottom: '20px'}}>\r\n        <p>Colored Orange</p>\r\n        <Tippy content={<span style={{color: 'orange'}}>Colored</span>}>\r\n        <button>Hover</button>\r\n        </Tippy>\r\n      </div>\r\n\r\n      <div style={{paddingBottom: '20px'}}>\r\n        <p>Colored Yellow; function</p>\r\n        <Tippy content={<ColoredTooltip/>}>\r\n        <button>Hover</button>\r\n        </Tippy>\r\n      </div>\r\n\r\n      <div style={{paddingBottom: '20px'}}>\r\n      <p>List tooltip; function; top-start placement</p>\r\n        <Tippy placement='top-start' content={<ColoredTooltip/>}>\r\n          <CustomChild />\r\n        </Tippy>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React from 'react'\r\nimport CountUp, {useCountUp} from 'react-countup'\r\n\r\nfunction Countup() {\r\n\r\n  const {countUp, start, pauseResume, reset, update } = useCountUp({duration: 5, end: 10000, startOnMount: false})\r\n  return (\r\n    <div>\r\n      <h1>Count Up</h1>\r\n      <div>\r\n        <h2>{countUp}</h2>\r\n        <button onClick={start}>Start</button>\r\n        <button onClick={reset}>Reset</button>\r\n        <button onClick={pauseResume}>Pause/Resume</button>\r\n        <button onClick={() => update(2000)}>Update to 2000</button>\r\n      </div>\r\n      <CountUp end={200} />\r\n      <br/>\r\n      <CountUp end={200} duration={5} />\r\n      <br/>\r\n      <CountUp start={500} end={1000} duration={5} />\r\n      <br/>\r\n      <CountUp end={1000} duration={5} prefix='$' decimals={2} />\r\n      <br/>\r\n      <CountUp end={1000} duration={5} suffix='USD' decimals={2} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countup\r\n","import React, { useState, useRef } from 'react'\r\nimport IdleTimer from 'react-idle-timer'\r\nimport Modal from 'react-modal'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction IdleTimerContainer() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true)\r\n  const [modalIsOpen, setModalIsOpen] = useState(false)\r\n  const idleTimerRef = useRef(null)\r\n  const sessionTimeoutRef = useRef(null)\r\n\r\n  const onIdle = () => {\r\n    console.log('User is idle')\r\n    setModalIsOpen(true)\r\n    sessionTimeoutRef.current = setTimeout(logOut, 5000) // logs user out if they're inactive after 5 seconds when modal shows up\r\n  }\r\n\r\n  const stayActive = () => {\r\n    setModalIsOpen(false)\r\n    clearTimeout(sessionTimeoutRef.current) // if they moved, clearTimeout\r\n    console.log('User is active')\r\n  }\r\n\r\n  const logOut = () => {\r\n    setModalIsOpen(false)\r\n    setIsLoggedIn(false)\r\n    clearTimeout(sessionTimeoutRef.current) // if they moved, clearTimeout\r\n    console.log('User has logged out')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Idle Timer</h1>\r\n      {isLoggedIn ? <p>Hello William</p> : <p>Hello Guest</p>}\r\n      <Modal isOpen={modalIsOpen}>\r\n        <h2>You've been idle for a while!</h2>\r\n        <p>You will be logged out soon</p>\r\n        <div>\r\n          <button onClick={logOut}>Log me out</button>\r\n          <button onClick={stayActive}>Keep me signed in</button>\r\n        </div>\r\n      </Modal>\r\n      {isLoggedIn && <IdleTimer ref={idleTimerRef} timeout={5 * 1000} onIdle={onIdle} />}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default IdleTimerContainer\r\n","import React, {useState} from 'react'\r\nimport { ChromePicker } from 'react-color'\r\n\r\nfunction ColorPicker() {\r\n\r\n  const [color, setColor] = useState('#fff')\r\n  const [showColorPicker, setShowColorPicker] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Color Picker</h1>\r\n      <button onClick={() => setShowColorPicker(showColorPicker => !showColorPicker)}>\r\n        {showColorPicker ? ' Close color picker' : 'Pick a color'}\r\n      </button>\r\n      {\r\n        showColorPicker && (\r\n        <ChromePicker\r\n          color={color}\r\n          onChange={updatedColor => setColor(updatedColor.hex)}\r\n        />)\r\n      }\r\n\r\n      <p>You picked {color}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React, { useState } from \"react\";\r\nimport Cards from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\nfunction CreditCard() {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credit Cards</h1>\r\n      <Cards\r\n        number={number}\r\n        name={name}\r\n        expiry={expiry}\r\n        cvc={cvc}\r\n        focused={focus}\r\n      />\r\n      <form>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Card Number\"\r\n          value={number}\r\n          onChange={e => setNumber(e.target.value)}\r\n          onFocus={e => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter Your Name...\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          onFocus={e => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"expiry\"\r\n          placeholder=\"MM/YY Expiry\"\r\n          value={expiry}\r\n          onChange={e => setExpiry(e.target.value)}\r\n          onFocus={e => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"cvc\"\r\n          placeholder=\"CVC\"\r\n          value={cvc}\r\n          onChange={e => setCvc(e.target.value)}\r\n          onFocus={e => setFocus(e.target.name)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreditCard;\r\n","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nfunction DatePickerContainer() {\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Date Picker</h1>\r\n      <DatePicker\r\n        selected={selectedDate}\r\n        onChange={date => setSelectedDate(date)}\r\n        dateFormat='dd/MM/yyyy' // sets formatting of date\r\n        minDate={new Date()} // disables all past dates\r\n        //maxDate={new Date() + 7}\r\n        filterDate={date => date.getDay() !== 6 && date.getDay() !== 0} // Saturday(6) and Sunday(0) excluded\r\n        isClearable\r\n        showYearDropdown\r\n        scrollableMonthYearDropdown\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DatePickerContainer\r\n","import React from 'react';\nimport ReactIcons from './components/ReactIcons' // Part 2 - Icons\nimport { IconContext } from 'react-icons'\nimport ReactToastify from './components/ReactToastify' // Part 3 - Toast Notifications\nimport ReactModal from './components/ReactModal' // Part 4 - Modals\nimport Tooltip from './components/Tooltip' // Part 5 - Tooltip\nimport './App.css';\nimport Countup from './components/Countup'; // Part 6 - CountUp Animated\nimport IdleTimerContainer from './components/IdleTimerContainer' // Part 7 - IdleTimerContainer\nimport ColorPicker from './components/ColorPicker';\nimport CreditCard from './components/CreditCard';\nimport DatePickerContainer from './components/DatePickerContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Part 2 - Icons */}\n      <IconContext.Provider value={{ color: 'blue', size: '5rem'}} >\n        <ReactIcons />\n      </IconContext.Provider>\n\n      {/* Part 3 - Toast Notifications */}\n      <ReactToastify />\n\n      {/* Part 4 - Modals */}\n      <ReactModal />\n\n      {/* Part 5 - Tooltip */}\n      <Tooltip />\n\n      {/* Part 6 - CountUp */}\n      <Countup />\n\n      {/* Part 7 - onIdle */}\n      <IdleTimerContainer />\n\n      {/* Part 8 - Color Picker */}\n      <ColorPicker />\n\n      {/* Part 9 - Credit Card */}\n      <CreditCard />\n\n      {/* Part 10 - Date Picker */}\n      <DatePickerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}